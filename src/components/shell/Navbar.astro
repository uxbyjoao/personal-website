---
import { navigation } from "@data";

import { Icon } from "astro-icon";

import NavbarLink from "@components/shell/NavbarLink.astro";
import Logo from "@components/shell/Logo.astro";
---

<header
  class="fixed z-30 w-full border-b border-b-stone-400/10 bg-stone-50/80 backdrop-blur-lg dark:border-b-stone-100/5 dark:bg-stone-900/80"
>
  <div class="container flex h-[80px] items-center justify-between">
    <a class="text-stone-800 dark:text-stone-50" href="/"><Logo /></a>
    <nav class="hidden items-center gap-3 md:flex" role="menubar">
      {
        navigation.map((item) => (
          <NavbarLink href={item.href}>{item.title}</NavbarLink>
        ))
      }

      <button
        aria-label="Dark/Light Mode"
        id="theme-button"
        class="rounded-md border border-stone-200 bg-stone-50 p-2 text-purple-500 dark:border-stone-700/50 dark:bg-stone-800 dark:text-orange-500"
      ></button>
    </nav>
    <button
      aria-label="Open Menu"
      id="menu-button"
      class="rounded-md border border-stone-200 bg-stone-50 p-2 text-stone-500 dark:border-stone-700/50 dark:bg-stone-800 dark:text-stone-300 md:hidden"
      ><Icon name="tabler:menu-2" size={18} /></button
    >
  </div>
</header>

<!-- https://github.com/satnaing/astro-paper/blob/main/public/toggle-theme.js is better -->
<script is:inline>
  const moon = `<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-moon"><path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path></svg>`;
  const sun = `<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-sun"><circle cx="12" cy="12" r="5"></circle><line x1="12" y1="1" x2="12" y2="3"></line><line x1="12" y1="21" x2="12" y2="23"></line><line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line><line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line><line x1="1" y1="12" x2="3" y2="12"></line><line x1="21" y1="12" x2="23" y2="12"></line><line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line><line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line></svg>`;
  const themeButton = document.querySelectorAll("#theme-button");
  const browserTheme = document.querySelector('[name="theme-color"]');
  let isDark;
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  if (theme === "light") {
    document.documentElement.setAttribute("data-theme", "light");
    isDark = true;
    themeButton.forEach((el) => (el.innerHTML = moon));
    browserTheme.content = "#FFFFFF";
  } else {
    document.documentElement.setAttribute("data-theme", "dark");
    isDark = false;
    themeButton.forEach((el) => (el.innerHTML = sun));
    browserTheme.content = "#111111";
  }
  window.localStorage.setItem("theme", theme);

  const darkModeHandler = () => {
    if (isDark) {
      document.documentElement.setAttribute("data-theme", "dark");
      localStorage.theme = "dark";
      isDark = false;
      themeButton.forEach((el) => (el.innerHTML = sun));
      browserTheme.content = "#111111";
    } else {
      document.documentElement.setAttribute("data-theme", "light");
      localStorage.theme = "light";
      isDark = true;
      themeButton.forEach((el) => (el.innerHTML = moon));
      browserTheme.content = "#FFFFFF";
    }
  };

  themeButton.forEach((el) => el.addEventListener("click", darkModeHandler));
</script>
